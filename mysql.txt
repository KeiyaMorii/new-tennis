INSERT INTO users (name, password) VALUES
('yamada', sha1('yamadapass')),
('tanaka', sha1('tanakapass')),
('kikuchi', sha1('kikuchipass'));

CREATE DATABASE tennis;

USE tennis;

CREATE TABLE bbs(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    title VARCHAR(255),
    body TEXT NOT NULL,
    date DATETIME NOT NULL,
    pass CHAR(4) NOT NULL
)DEFAULT CHARACTER SET=utf8;

GRANT ALL ON tennis.* to 'tennisuser'@'localhost'
IDENTIFIED BY 'password';

FLUSH PRIVILEGES;

mysql -u tennisuser -p

USE tennis

DESC bbs;

samurai

データベース作成
create database testdb;

データベース一覧を取得
show databases;

insert into training1.users values (1001, '山田太郎', 18, '男', 'taro.yamada@aaa.com', '03-1111-1111', 170, 61),
(1002, '鈴木花子', 24, '女', 'hanako.suzuki@bbb.com', '090-1234-5678', 155, 45),
(1003, '田中次郎', 32, '男', 'jiro.tanaka@ccc.com', '05-2222-2222', 182, 89),
(1004, '佐藤三郎', 47, '男', 'saburo.sato@ddd.com', '080-9876-5432', 193, 76),
(1005, '侍桃子', 50, '女', 'momoko.samurai@eee.com', '08-3333-3333', 167, 58);

training1 DBのusersテーブルの中からemailカラムのデータを取得
select email from training1.users;

training1 DBのusersテーブルの中からname,age,idカラムのデータを取得
順序は自由に指定できる
select name, age, id from training1.users;

training1 DBのusersテーブルの中から全てのカラムのデータを取得
select * from training1.users;

演習
select id, name, tel, email from training1.users;

genderカラムの値＝男の条件式を満たすデータを全て取得
select * from training1.users where gender='男';

emailカラムの値='jiro.tanaka@ccc.com'の条件式を満たすデータのうち、name,email,telのカラムの値を取得
select name, email, tel from training1.users where email='jiro.tanaka@ccc.com';

select height % age from training1.users;

比較演算子
select 5 = 5, 5 <=> 8, 5 <> 8, 5 != 5;
select 5 < 5, 5 <= 8, 5 > 8, 5 >= 5;
select 5 between 2 and 10, 1 not between 2 and 10;
select 5 is null, 5 is not null;
select 5=6 is true, 10<3 is not true;
select 5 in (2,4,6,8,10), 5 not in (2,4,6,8,10);
論理積
select 100 > 50, 10 < 5, 100 > 50 and 10 < 5;
論理和
select 100 > 50, 10 < 5, 100 > 50 or 10 < 5;
排他的論理和
select 100 > 50, 10 > 5, 100 > 50 xor 10 > 5;
論理否定
select 100 > 50, 10 < 5, not 100 > 50, ! 10 < 5;

select * from training1.users where not age + weight > 120 or height > 190;
演習
select * from training1.users where weight / ((height / 100) * (height /100)) between 20 and 22;
並び替え・昇順[asc](値が大きくなる順に並ぶ)    asc省略しても昇順になる
select id, name, height from training1.users order by height asc;
降順[desc](値が小さくなる順に並ぶ)
select id, name, height from training1.users order by height desc;
2つのカラムを並び替える
select * from training1.users order by gender desc, age asc;
WHEREとの組み合わせ
select * from training1.users where age >= 20 order by gender asc, age desc;
演習
select * from training1.users where height >= 160 order by weight asc;
7章
create table training1.transactions(id int, buyer varchar(20), item varchar(20), sales int, purchaseDate date);
select * from training1.transactions;

AND/OR AND または ORのいずれかを指定できる
select * from training1.transactions where purchaseDate >= '2020-05-05' and (item='Beef' or item='pork');

BETWEEN 範囲を指定
select * from training1.transactions where purchaseDate between '2020-05-01' and '2020-05-08';

IN 指定したリストに含まれるデータの抽出
select * from training1.transactions where item in ('Coffee(S)', 'Coffee(M)', 'Coffee(L)');
NOT IN 該当しないデータの抽出
select * from training1.transactions where item not in ('Coffee(S)', 'Coffee(M)', 'Coffee(L)');

LIKE 特定の文字列パターンに合致するデータを抽出 (%  任意の0文字以上の文字列, _  任意の1文字)
select * from training1.transactions where item like 'Coffee%';

LIMIT 抽出できるレコード数の上限を設定
select * from training1.transactions limit 10;

GROUP BY 特定のカラムの値を基準にグループ化してデータを抽出
select buyer, sum(sales) from training1.transactions group by buyer;

HAVING グループ化したデータに対してさらに条件を指定してデータを絞り込みたいとき
select buyer, sum(sales) from training1.transactions group by buyer having sum(sales) >= 1500;

演習
select * from training1.transactions where item like '%ee%';
select purchaseDate, sum(sales) from training1.transactions where item like '%ee%' group by purchaseDate having sum(sales) between 500 and 1500 order by purchaseDate desc;

8章  関数
select sum(sales) from training1.transactions;

COUNT 指定したカラムの行数を抽出
select count(buyer) from training1.transactions;

SUM 指定したカラムの値の合計を取得
select item, sum(sales) from training1.transactions group by item order by sum(sales) desc;

AVG 指定したカラムの平均値を抽出
select buyer, avg(sales) from training1.transactions group by buyer order by avg(sales) asc;

MAX,MIN 指定したカラムの値の最大値と最小値を抽出
select max(sales), min(sales) from training1.transactions;

演習
select purchaseDate, avg(sales) from training1.transactions group by purchaseDate having avg(sales) >= 500;

9章  応用演習
create database training2;
(1) create table training2.orders (id int, user varchar(20), item varchar(30), category varchar(20), price int, discount int,
total int, cardType varchar(10), orderDate date);
(2) select id, user, total from training2.orders;
select * from training2.orders;
(3) select * from training2.orders where category = 'サプリメント' or category = '衣類' order by price desc;
(4) select * from training2.orders where total >= 5000 and orderDate between '2020-03-01' and '2020-03-31' and discount is not null;
(5) select * from training2.orders where cardType in ('Visa', 'JCB', 'Amex') order by orderDate desc limit 15;
(6) select user, count(user) from training2.orders group by user having count(user) >= 10 order by count(user) asc;
(7) select * from training2.orders where item like '%ビタミン%';
(8) select category, sum(total) from training2.orders where orderDate between '2020-04-01' and '2020-04-30' group by category order by sum(total) desc;
(9) select category, max(total), min(total) from training2.orders group by category having max(total) / min(total) > 2;